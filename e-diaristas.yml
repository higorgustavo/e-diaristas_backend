openapi: 3.0.1
info:
    title: E-diaristas
    description: API back-end da aplicação E-diaristas
    version: 1.0.0
    contact:
        name: Higor Gustavo
        url: https://higorgustavo.com.br
        email: higor.gustavo.lp@gmail.com
servers:
    - url: http://localhost:8000
      description: Aplicação Django local
    - url: https://ediaristas-api-python.herokuapp.com
      description: Aplicação Django Heroku
tags:
    - name: Me
    - name: Api
    - name: Auth
    - name: Diárias
    - name: Usuários
    - name: Diaristas
    - name: Enderecos
    - name: Oportunidades
paths:
    /api:
        get:
            operationId: getLinks
            tags:
                - Api
            description: Exibe os links iniciais da API
            responses:
                "200":
                    description: Exibição realizada com sucesso
                    content:
                        "application/json":
                            schema:
                                type: object
                                properties:
                                    links:
                                        type: array
                                        items:
                                            $ref: "#/components/schemas/LinkResponse"
    /api/diaristas/localidades:
        get:
            operationId: getDiaristasLocalidades
            tags:
                - Diaristas
            description: Buscar diaristas que atendam em determinada localidade
            parameters:
                - name: cep
                  in: query
                  required: true
                  schema:
                      type: string
                  example: "56895000"
            responses:
                "200":
                    description: Busca realizada com sucesso
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/DiaristaLocalidadePagedResponse"
                "400":
                    description: CEP não foi informado ou é inválido
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "404":
                    description: CEP informado não foi encontrado
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
    /api/diaristas/disponibilidade:
        get:
            operationId: getDisponibilidade
            tags:
                - Diaristas
            description: Verificar a disponibilidade de diáristas por localidade
            parameters:
                - name: cep
                  in: query
                  required: true
                  schema:
                      type: string
                  example: "56895000"
            responses:
                "200":
                    description: Verificação realizada com sucesso
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/DisponibilidadeResponse"
                "400":
                    description: CEP não foi informado ou é inválido
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "404":
                    description: CEP informado não foi encontrado
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
    /api/enderecos:
        get:
            operationId: getEndereco
            tags:
                - Enderecos
            description: Buscar dados de um endereço por CEP
            parameters:
                - name: cep
                  in: query
                  required: true
                  schema:
                      type: string
                  example: "56895000"
            responses:
                "200":
                    description: Busca realizada com sucesso
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/EnderecoResponse"
                "400":
                    description: CEP não foi informado ou é inválido
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "404":
                    description: CEP informado não foi encontrado
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
    /api/usuarios:
        post:
            operationId: postUsuario
            tags:
                - Usuários
            description: cadastrar um novo usuários
            requestBody:
                content:
                    "multipart/form-data":
                        schema:
                            $ref: "#/components/schemas/CreateUsuarioRequest"
            responses:
                "201":
                    description: Usuário cadastrado com sucesso
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/CreateUsuarioResponse"
                "400":
                    description: Houveram erros de validação
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
    /api/usuarios/enderecos:
        get:
            operationId: getUsuarioEndereco
            tags:
                - Usuários
            description: Exibe o endereco do usuário logado
            responses:
                "200":
                    description: Endereço do usuário logado exibindo com com sucesso
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/UsuarioEnderecoResponse"
                "401":
                    description: Usuário não está autenticado
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "403":
                    description: Usuário autenticado não tem acesso para realizar operação
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "404":
                    description: O endereço do usuário logado não foi encontrado
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
            security:
                - JWT: []

        put:
            operationId: putUsuarioEndereco
            tags:
                - Usuários
            description: Altera o endereço do usuário logado
            requestBody:
                content:
                    "application/json":
                        schema:
                            $ref: "#/components/schemas/UsuarioEnderecoRequest"
            responses:
                "200":
                    description: Alteração do endereço realizado com sucesso
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/UsuarioEnderecoResponse"
                "400":
                    description: Houveram erros de validação
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "401":
                    description: Usuário não está autenticado
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "403":
                    description: Usuário autenticado não tem acesso para realizar operação
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
            security:
                - JWT: []
    /api/usuarios/cidades-atendidas:
        get:
            operationId: getUsuarioCidadesAtendidas
            tags:
                - Usuários
            description: Lista as cidades atendidas pelo usuário logado
            responses:
                "200":
                    description: Listagem realizada com sucesso
                    content:
                        "application/json":
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/UsuarioCidadeAtendidaResponse"
                "401":
                    description: Usuário não está autenticado
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "403":
                    description: Usuário autenticado não tem acesso para realizar operação
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "404":
                    description: O endereço do usuário logado não foi encontrado
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
            security:
                - JWT: []

        put:
            operationId: putUsuarioCidadesAtendidas
            tags:
                - Usuários
            description: Atualiza as cidasdas atenidas pelo usuário logado
            requestBody:
                content:
                    "application/json":
                        schema:
                            $ref: "#/components/schemas/UsuarioCidadesAtendidasRequest"
            responses:
                "200":
                    description: Cidades atendidas pelo usuário logado atualizadas com sucesso
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/MessageResponse"
                "400":
                    description: Houveram erros de validação
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "401":
                    description: Usuário não está autenticado
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "403":
                    description: Usuário autenticado não tem acesso para realizar operação
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
            security:
                - JWT: []
    /auth/token/:
        post:
            operationId: token
            tags:
                - Auth
            description: Autenticar com as credencias do usuário
            requestBody:
                content:
                    "application/json":
                        schema:
                            $ref: "#/components/schemas/CredentialRequest"
            responses:
                "200":
                    description: Autenticação realizada com sucesso
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/TokenResponse"
                "400":
                    description: Houveram erros de validação
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "401":
                    description: Credenciais incorretas
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
    /auth/token/refresh/:
        post:
            operationId: refresh
            tags:
                - Auth
            description: Autenticar com refresh token
            requestBody:
                content:
                    "application/json":
                        schema:
                            $ref: "#/components/schemas/RefreshRequest"
            responses:
                "200":
                    description: Autenticação realizada com sucesso
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/TokenResponse"
                "400":
                    description: Houveram erros de validação
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "401":
                    description: Refresh token inválido
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
    /auth/logout/:
        post:
            operationId: logout
            tags:
                - Auth
            description: Realizar logoutao inválidar o refresh token
            requestBody:
                content:
                    "application/json":
                        schema:
                            $ref: "#/components/schemas/RefreshRequest"
            responses:
                "205":
                    description: Logout realizado com sucesso
                "400":
                    description: Houveram erros de validação
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
    /api/me:
        get:
            operationId: getMe
            tags:
                - Me
            description: Obter os dados do usuário logado
            responses:
                "200":
                    description: Usuário logado obtido com sucesso
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/MeResponse"
                "400":
                    description: Usuário não está autenticado
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
            security:
                - JWT: []
    /api/diarias:
        get:
            operationId: getDairias
            tags:
                - Diárias
            description: Listar as diárias do usuário logado
            responses:
                "200":
                    description: Listagem realizada com sucesso
                    content:
                        "application/json":
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/DiariaResponse"
                "401":
                    description: Usuário não está autenticado
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "403":
                    description: Usuário autenticado não tem acesso para realizar operação
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
            security:
                - JWT: []
        post:
            operationId: postDiaria
            tags:
                - Diárias
            description: Cadastrar nova diária
            requestBody:
                content:
                    "application/json":
                        schema:
                            $ref: "#/components/schemas/DiariaRequest"
            responses:
                "201":
                    description: Diária cadastrada com sucesso
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/DiariaResponse"
                "400":
                    description: Houveram erros de validação
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "401":
                    description: Usuário não está autenticado
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "403":
                    description: Usuário autenticado não tem acesso para realizar operação
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
            security:
                - JWT: []
    /api/diarias/{diariaId}:
        get:
            operationId: getDairias
            tags:
                - Diárias
            description: Busca uma diária por ID
            parameters:
                - name: diariaId
                  in: path
                  description: ID da diária buscada
                  required: true
                  schema:
                      type: integer
                  example: 1
            responses:
                "200":
                    description: Diária encontrada com sucesso
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/DiariaResponse"
                "401":
                    description: Usuário não está autenticado
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "403":
                    description: Usuário autenticado não tem acesso para realizar operação
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "404":
                    description: Diária não encontrada
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
    /api/diarias/{diariaId}/pagamentos:
        post:
            operationId: pagarDiaria
            tags:
                - Diárias
            description: Realizar o pagamento de uma diária
            parameters:
                - name: diariaId
                  in: path
                  description: ID da diária a ser paga
                  required: true
                  schema:
                      type: integer
                  example: 1
            requestBody:
                content:
                    "application/json":
                        schema:
                            $ref: "#/components/schemas/PagamentosRequest"
            responses:
                "200":
                    description: Pagamento realizado com sucesso
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/MessageResponse"
                "400":
                    description: Houveram erros de validação
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "401":
                    description: Usuário não está autenticado
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "403":
                    description: Usuário autenticado não tem acesso para realizar operação
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "404":
                    description: Diária não encontrada
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
            security:
                - JWT: []
    /api/diarias/{diariaId}/candidatar:
        post:
            operationId: candidatarDiaria
            tags:
                - Diárias
            description: Realizar candidatura do usuário logado para uma diária
            parameters:
                - name: diariaId
                  in: path
                  description: ID da diária para se candidatar
                  required: true
                  schema:
                      type: integer
                  example: 1
            responses:
                "200":
                    description: Candidatura realizada com sucesso
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/MeResponse"
                "401":
                    description: Usuário não está autenticado
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "403":
                    description: Usuário autenticado não tem acesso para realizar operação
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "404":
                    description: Diária não encontrada
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
            security:
                - JWT: []

    /api/oportunidades:
        get:
            operationId: getOportunidades
            tags:
                - Oportunidades
            description: Lista as oportunidades disponiveis para o usuário logado
            responses:
                "200":
                    description: Oportunidades listadas com sucesso
                    content:
                        "application/json":
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/OportunidadeResponse"
                "401":
                    description: Usuário não está autenticado
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "403":
                    description: Usuário autenticado não tem acesso para realizar operação
                    content:
                        "application/json":
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
            security:
                - JWT: []

# 33 - Documentando a API

components:
    schemas:
        DiaristaLocalidadePagedResponse:
            type: object
            properties:
                diaristas:
                    type: array
                    items:
                        $ref: "#/components/schemas/DiaristaLocalidadeResponse"
                quantidade_diaristas:
                    type: integer
        DiaristaLocalidadeResponse:
            type: object
            properties:
                nome_completo:
                    type: string
                reputacao:
                    type: number
                    format: double
                foto_usuario:
                    type: string
                    format: url
                cidade:
                    type: string
        ErrorResponse:
            type: object
            properties:
                status:
                    type: integer
                timestamp:
                    type: string
                    format: date-time
                message:
                    type: string
                erros:
                    type: object
                    additionalProperties:
                        type: array
                        items:
                            type: string
        EnderecoResponse:
            type: object
            properties:
                cep:
                    type: string
                logradouro:
                    type: string
                complemento:
                    type: string
                bairro:
                    type: string
                localidade:
                    type: string
                uf:
                    type: string
                ibge:
                    type: string
        DisponibilidadeResponse:
            type: object
            properties:
                disponibilidade:
                    type: boolean
        LinkResponse:
            type: object
            properties:
                type:
                    type: string
                    enum:
                        - GET
                        - POST
                        - PUT
                        - PATCH
                        - DELETE
                rel:
                    type: string
                uri:
                    type: string
                    format: uri
        CreateUsuarioRequest:
            type: object
            required:
                - nome_completo
                - email
                - password
                - password_confirmation
                - tipo_usuario
                - cpf
                - nascimento
                - telefone
                - foto_documento
                - foto_usuario
            properties:
                nome_completo:
                    type: string
                    minLength: 3
                    maxLength: 255
                email:
                    type: string
                    format: email
                    maxLength: 255
                password:
                    type: string
                    format: password
                password_confirmation:
                    type: string
                    format: password
                tipo_usuario:
                    type: integer
                    enum:
                        - 1
                        - 2
                cpf:
                    type: string
                    minLength: 11
                    maxLength: 11
                nascimento:
                    type: string
                    format: date
                telefone:
                    type: string
                    minLength: 11
                    maxLength: 11
                foto_documento:
                    type: string
                    format: binary
                chave_pix:
                    minLength: 11
                    maxLength: 255
        CreateUsuarioResponse:
            type: object
            properties:
                id:
                    type: integer
                nome_completo:
                    type: string
                email:
                    type: string
                    format: email
                tipo_usuario:
                    type: integer
                    enum:
                        - 1
                        - 2
                cpf:
                    type: string
                nascimento:
                    type: string
                    format: date
                telefone:
                    type: string
                foto_usuario:
                    type: string
                    format: uri
                chave_pix:
                    type: string
                token:
                    $ref: "#/components/schemas/TokenResponse"
                links:
                    type: array
                    items:
                        $ref: "#/components/schemas/LinkResponse"
        TokenResponse:
            type: object
            properties:
                access:
                    type: string
                refresh:
                    type: string
        CredentialRequest:
            type: object
            required:
                - email
                - password
            properties:
                email:
                    type: string
                    format: email
                password:
                    type: string
                    format: password
        RefreshRequest:
            type: object
            required:
                - refresh
            properties:
                refresh:
                    type: string
        MeResponse:
            type: object
            properties:
                id:
                    type: integer
                nome_completo:
                    type: string
                email:
                    type: string
                    format: email
                tipo_usuario:
                    type: integer
                    enum:
                        - 1
                        - 2
                cpf:
                    type: string
                nascimento:
                    type: string
                    format: date
                telefone:
                    type: string
                foto_usuario:
                    type: string
                    format: uri
                chave_pix:
                    type: string
                links:
                    type: array
                    items:
                        $ref: "#/components/schemas/LinkResponse"
        DiariaRequest:
            type: object
            required:
                - data_atendimento
                - tempo_atendimento
                - preco
                - cep
                - logradouro
                - bairro
                - cidade
                - estado
                - codigo_ibge
                - quantidade_quartos
                - quantidade_salas
                - quantidade_banheiros
                - quantidade_cozinhas
                - quantidade_quintais
                - quantidade_outros
                - servico
            properties:
                data_atendimento:
                    type: string
                    format: date-time
                tempo_atendimento:
                    type: integer
                preco:
                    type: number
                    format: double
                cep:
                    type: string
                logradouro:
                    type: string
                complemento:
                    type: string
                bairro:
                    type: string
                cidade:
                    type: string
                estado:
                    type: string
                codigo_ibge:
                    type: string
                quantidade_quartos:
                    type: integer
                quantidade_salas:
                    type: integer
                quantidade_banheiros:
                    type: integer
                quantidade_cozinhas:
                    type: integer
                quantidade_quintais:
                    type: integer
                quantidade_outros:
                    type: integer
                observacoes:
                    type: string
                servico:
                    type: integer
        DiariaResponse:
            type: object
            properties:
                id:
                    type: integer
                status:
                    type: integer
                    enum:
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                        - 6
                        - 7
                motivo_cancelamento:
                    type: string
                nome_servico:
                    type: string
                create_at:
                    type: string
                    format: date-time
                update_at:
                    type: string
                    format: date-time
                data_atendimento:
                    type: string
                    format: date-time
                tempo_atendimento:
                    type: integer
                preco:
                    type: number
                    format: double
                cep:
                    type: string
                logradouro:
                    type: string
                complemento:
                    type: string
                bairro:
                    type: string
                cidade:
                    type: string
                estado:
                    type: string
                codigo_ibge:
                    type: string
                quantidade_quartos:
                    type: integer
                quantidade_salas:
                    type: integer
                quantidade_banheiros:
                    type: integer
                quantidade_cozinhas:
                    type: integer
                quantidade_quintais:
                    type: integer
                quantidade_outros:
                    type: integer
                observacoes:
                    type: string
                servico:
                    type: integer
                cliente:
                    $ref: "#/components/schemas/UsuarioDiariaRequest"
                diarista:
                    $ref: "#/components/schemas/UsuarioDiariaRequest"
                links:
                    type: array
                    items:
                        $ref: "#/components/schemas/LinkResponse"
        UsuarioDiariaRequest:
            type: object
            properties:
                id:
                    type: integer
                nome_completo:
                    type: string
                nascimento:
                    type: string
                    format: date
                foto_usuario:
                    type: string
                    format: uri
                telefone:
                    type: string
                tipo_usuario:
                    type: integer
                    enum:
                        - 1
                        - 2
                reputacao:
                    type: number
                    format: double
        PagamentosRequest:
            type: object
            required:
                - card_hash
            properties:
                card_hash:
                    type: string
        MessageResponse:
            type: object
            properties:
                message:
                    type: string
        UsuarioEnderecoRequest:
            type: object
            required:
                - logradouro
                - numero
                - bairro
                - cep
                - cidade
                - estado
            properties:
                logradouro:
                    type: string
                    minLength: 3
                    maxLength: 60
                numero:
                    type: string
                    minLength: 1
                    maxLength: 10
                bairro:
                    type: string
                    minLength: 3
                    maxLength: 30
                cep:
                    type: string
                    minLength: 8
                    maxLength: 10
                cidade:
                    type: string
                    minLength: 3
                    maxLength: 30
                estado:
                    type: string
                    minLength: 2
                    maxLength: 2
                complemento:
                    type: string
                    maxLength: 100
        UsuarioEnderecoResponse:
            type: object
            properties:
                id:
                    type: integer
                logradouro:
                    type: string
                numero:
                    type: string
                bairro:
                    type: string
                cep:
                    type: string
                cidade:
                    type: string
                estado:
                    type: string
                complemento:
                    type: string
        UsuarioCidadesAtendidasRequest:
            type: object
            required:
                - cidades
            properties:
                cidades:
                    type: array
                    items:
                        $ref: "#/components/schemas/UsuarioCidadeAtendidaRequest"
        UsuarioCidadeAtendidaRequest:
            type: object
            required:
                - cidade
                - codigo_ibge
            properties:
                cidade:
                    type: string
                    minLength: 3
                    maxLength: 30
                codigo_ibge:
                    type: string
        UsuarioCidadeAtendidaResponse:
            type: object
            properties:
                id:
                    type: integer
                cidade:
                    type: string
                estado:
                    type: string
                codigo_ibge:
                    type: string
        OportunidadeResponse:
            type: object
            properties:
                id:
                    type: integer
                status:
                    type: integer
                    enum:
                        - 1
                        - 2
                        - 3
                        - 4
                        - 5
                        - 6
                        - 7
                motivo_cancelamento:
                    type: string
                nome_servico:
                    type: string
                create_at:
                    type: string
                    format: date-time
                update_at:
                    type: string
                    format: date-time
                data_atendimento:
                    type: string
                    format: date-time
                tempo_atendimento:
                    type: integer
                preco:
                    type: number
                    format: double
                cep:
                    type: string
                logradouro:
                    type: string
                complemento:
                    type: string
                bairro:
                    type: string
                cidade:
                    type: string
                estado:
                    type: string
                codigo_ibge:
                    type: string
                quantidade_quartos:
                    type: integer
                quantidade_salas:
                    type: integer
                quantidade_banheiros:
                    type: integer
                quantidade_cozinhas:
                    type: integer
                quantidade_quintais:
                    type: integer
                quantidade_outros:
                    type: integer
                observacoes:
                    type: string
                servico:
                    type: integer
                cliente:
                    $ref: "#/components/schemas/UsuarioDiariaRequest"
                avaliacoes_cliente:
                    type: array
                    items:
                        $ref: "#/components/schemas/AvaliacaoResponse"
                links:
                    type: array
                    items:
                        $ref: "#/components/schemas/LinkResponse"
        AvaliacaoResponse:
            type: object
            properties:
                descricao:
                    type: string
                nota:
                    type: number
                    format: double
                nome_avaliador:
                    type: string
                foto_avaliador:
                    type: string
                    format: uri
    securitySchemes:
        JWT:
            type: http
            scheme: bearer
